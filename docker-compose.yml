version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: housebrain_web
    command: /start
    volumes:
      - .:/app
      - /dev/i2c-1:/dev/i2c-1
    ports:
      - 8000:8000
    env_file:
      - .env
    devices:
      - "${SERIAL_PORT}:${SERIAL_PORT}"
      - "/dev/i2c-1"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      celery_worker:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 10s
      retries: 15
      start_period: 15s
      timeout: 10s


  db:
    image: postgres:17-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${SQL_DATABASE}
      POSTGRES_USER: ${SQL_USER}
      POSTGRES_PASSWORD: ${SQL_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${SQL_USER} -d ${SQL_DATABASE}"]
      interval: 10s
      retries: 15
      start_period: 15s
      timeout: 10s

  redis:
    image: redis:7-alpine
    container_name: "redis"
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 15
      start_period: 15s
      timeout: 10s

  celery_worker:
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: housebrain_celery_worker
    command: /start-celeryworker
    volumes:
      - .:/app
      - /dev/i2c-1:/dev/i2c-1
    env_file:
      - .env
    devices:
      - "${SERIAL_PORT}:${SERIAL_PORT}"
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "celery inspect ping --destination celery@$$HOSTNAME"]
      interval: 30s
      retries: 15
      start_period: 5s
      timeout: 10s

  celery_beat:
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: housebrain_celery_beat
    command: /start-celerybeat
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy

  flower:
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: housebrain_celery_flower
    command: /start-flower
    volumes:
      - .:/app
    env_file:
      - .env
    ports:
      - 5557:5555
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
      celery_worker:
        condition: service_healthy

volumes:
  postgres_data: