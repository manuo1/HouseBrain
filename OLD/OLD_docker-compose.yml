version: '3.8'
services:
  django:
    build: .
    container_name: "django"
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
      celery:
        condition: service_healthy
    env_file:
      - .env
    devices:
      - "${SERIAL_PORT}:${SERIAL_PORT}"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 10s
      retries: 15
      start_period: 15s
      timeout: 10s
    entrypoint: ["/app/docker-entrypoint.sh", "django"]

  celery:
    build: .
    container_name: "celery"
    volumes:
      - .:/app
    depends_on:
      redis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    healthcheck:
      test: ["CMD-SHELL", "celery inspect ping --destination celery@$$HOSTNAME"]
      interval: 30s
      retries: 15
      start_period: 5s
      timeout: 10s
    entrypoint: ["/app/docker-entrypoint.sh", "celery"]

  redis:
    image: redis:7.4-alpine
    container_name: "redis"
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 15
      start_period: 15s
      timeout: 10s


  postgres:
    image: postgres:17.0-alpine
    container_name: "postgres"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 15
      start_period: 15s
      timeout: 10s

volumes:
  postgres_data: